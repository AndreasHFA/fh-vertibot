   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"heap_1.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.align	1
  21              		.global	pvPortMalloc
  22              		.thumb
  23              		.thumb_func
  25              	pvPortMalloc:
  26              	.LFB0:
  27              		.file 1 "/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1
   1:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** /*
   2:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     FreeRTOS V7.5.3 - Copyright (C) 2013 Real Time Engineers Ltd. 
   3:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     All rights reserved
   4:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
   5:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
   7:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     ***************************************************************************
   8:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *                                                                       *
   9:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  10:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *    robust, strictly quality controlled, supported, and cross          *
  11:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *    platform software that has become a de facto standard.             *
  12:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *                                                                       *
  13:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *    Help yourself get started quickly and support the FreeRTOS         *
  14:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *    project by purchasing a FreeRTOS tutorial book, reference          *
  15:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *    manual, or both from: http://www.FreeRTOS.org/Documentation        *
  16:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *                                                                       *
  17:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *    Thank you!                                                         *
  18:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *                                                                       *
  19:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     ***************************************************************************
  20:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  21:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     This file is part of the FreeRTOS distribution.
  22:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  23:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  24:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     the terms of the GNU General Public License (version 2) as published by the
  25:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     Free Software Foundation >>!AND MODIFIED BY!<< the FreeRTOS exception.
  26:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  27:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     >>! NOTE: The modification to the GPL is included to allow you to distribute
  28:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     >>! a combined work that includes FreeRTOS without being obliged to provide
  29:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     >>! the source code for proprietary components outside of the FreeRTOS
  30:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     >>! kernel.
  31:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  32:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  33:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  34:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available from the following
  35:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     link: http://www.freertos.org/a00114.html
  36:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  37:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     1 tab == 4 spaces!
  38:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  39:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     ***************************************************************************
  40:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *                                                                       *
  41:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *    Having a problem?  Start by reading the FAQ "My application does   *
  42:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *    not run, what could be wrong?"                                     *
  43:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *                                                                       *
  44:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *    http://www.FreeRTOS.org/FAQHelp.html                               *
  45:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****      *                                                                       *
  46:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     ***************************************************************************
  47:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  48:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     http://www.FreeRTOS.org - Documentation, books, training, latest versions,
  49:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     license and Real Time Engineers Ltd. contact details.
  50:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  51:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  52:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  53:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  54:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  55:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd license FreeRTOS to High
  56:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     Integrity Systems to sell under the OpenRTOS brand.  Low cost OpenRTOS
  57:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     licenses offer ticketed support, indemnification and middleware.
  58:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  59:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  60:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     engineered and independently SIL3 certified version for use in safety and
  61:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     mission critical applications that require provable dependability.
  62:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  63:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****     1 tab == 4 spaces!
  64:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** */
  65:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  66:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  67:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** /*
  68:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****  * The simplest possible implementation of pvPortMalloc().  Note that this
  69:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****  * implementation does NOT allow allocated memory to be freed again.
  70:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****  *
  71:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****  * See heap_2.c, heap_3.c and heap_4.c for alternative implementations, and the
  72:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****  * memory management pages of http://www.FreeRTOS.org for more information.
  73:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c ****  */
  74:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** #include <stdlib.h>
  75:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  76:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  77:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** all the API functions to use the MPU wrappers.  That should only be done when
  78:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** task.h is included from an application file. */
  79:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  80:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  81:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** #include "FreeRTOS.h"
  82:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** #include "task.h"
  83:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  84:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  85:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  86:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** /* A few bytes might be lost to byte aligning the heap start address. */
  87:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** #define configADJUSTED_HEAP_SIZE	( configTOTAL_HEAP_SIZE - portBYTE_ALIGNMENT )
  88:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  89:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** /* Allocate the memory for the heap. */
  90:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** static unsigned char ucHeap[ configTOTAL_HEAP_SIZE ];
  91:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** static size_t xNextFreeByte = ( size_t ) 0;
  92:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  93:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** /*-----------------------------------------------------------*/
  94:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
  95:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** void *pvPortMalloc( size_t xWantedSize )
  96:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** {
  28              		.loc 1 96 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  97:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** void *pvReturn = NULL;
  98:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** static unsigned char *pucAlignedHeap = NULL;
  99:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
 100:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	/* Ensure that blocks are always aligned to the required number of bytes. */
 101:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	#if portBYTE_ALIGNMENT != 1
 102:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 		if( xWantedSize & portBYTE_ALIGNMENT_MASK )
  40              		.loc 1 102 0
  41 0002 4307     		lsls	r3, r0, #29
  96:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** {
  42              		.loc 1 96 0
  43 0004 0546     		mov	r5, r0
 103:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 		{
 104:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 			/* Byte alignment required. */
 105:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 			xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
  44              		.loc 1 105 0
  45 0006 1CBF     		itt	ne
  46 0008 20F00705 		bicne	r5, r0, #7
  47 000c 0835     		addne	r5, r5, #8
  48              	.LVL1:
 106:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 		}
 107:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	#endif
 108:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
 109:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	vTaskSuspendAll();
  49              		.loc 1 109 0
  50 000e FFF7FEFF 		bl	vTaskSuspendAll
  51              	.LVL2:
 110:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	{
 111:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 		if( pucAlignedHeap == NULL )
  52              		.loc 1 111 0
  53 0012 0F4A     		ldr	r2, .L12
  54 0014 1368     		ldr	r3, [r2]
  55 0016 23B9     		cbnz	r3, .L3
 112:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 		{
 113:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 			/* Ensure the heap starts on a correctly aligned boundary. */
 114:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 			pucAlignedHeap = ( unsigned char * ) ( ( ( portPOINTER_SIZE_TYPE ) &ucHeap[ portBYTE_ALIGNMENT ]
  56              		.loc 1 114 0
  57 0018 02F10C03 		add	r3, r2, #12
  58 001c 23F00703 		bic	r3, r3, #7
  59 0020 1360     		str	r3, [r2]
  60              	.L3:
 115:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 		}
 116:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
 117:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 		/* Check there is enough room left for the allocation. */
 118:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 		if( ( ( xNextFreeByte + xWantedSize ) < configADJUSTED_HEAP_SIZE ) &&
  61              		.loc 1 118 0
  62 0022 0C49     		ldr	r1, .L12+4
  63 0024 D1F81436 		ldr	r3, [r1, #1556]
  64 0028 42F2F770 		movw	r0, #10231
  65 002c 1D44     		add	r5, r5, r3
  66              	.LVL3:
  67 002e 8542     		cmp	r5, r0
  68 0030 06D8     		bhi	.L7
  69              		.loc 1 118 0 is_stmt 0 discriminator 1
  70 0032 9D42     		cmp	r5, r3
  71 0034 04D9     		bls	.L7
 119:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 			( ( xNextFreeByte + xWantedSize ) > xNextFreeByte )	)/* Check for overflow. */
 120:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 		{
 121:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 			/* Return the next free byte then increment the index past this
 122:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 			block. */
 123:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 			pvReturn = pucAlignedHeap + xNextFreeByte;
  72              		.loc 1 123 0 is_stmt 1
  73 0036 1468     		ldr	r4, [r2]
 124:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 			xNextFreeByte += xWantedSize;
  74              		.loc 1 124 0
  75 0038 C1F81456 		str	r5, [r1, #1556]
 123:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 			pvReturn = pucAlignedHeap + xNextFreeByte;
  76              		.loc 1 123 0
  77 003c 1C44     		add	r4, r4, r3
  78              	.LVL4:
  79 003e 00E0     		b	.L4
  80              	.LVL5:
  81              	.L7:
  97:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** void *pvReturn = NULL;
  82              		.loc 1 97 0
  83 0040 0024     		movs	r4, #0
  84              	.LVL6:
  85              	.L4:
 125:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 		}
 126:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
 127:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 		traceMALLOC( pvReturn, xWantedSize );
 128:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	}	
 129:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	xTaskResumeAll();
  86              		.loc 1 129 0
  87 0042 FFF7FEFF 		bl	xTaskResumeAll
  88              	.LVL7:
 130:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
 131:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
 132:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	{
 133:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 		if( pvReturn == NULL )
  89              		.loc 1 133 0
  90 0046 0CB9     		cbnz	r4, .L5
  91              	.LVL8:
  92              	.LBB2:
 134:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 		{
 135:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 			extern void vApplicationMallocFailedHook( void );
 136:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 			vApplicationMallocFailedHook();
  93              		.loc 1 136 0
  94 0048 FFF7FEFF 		bl	vApplicationMallocFailedHook
  95              	.LVL9:
  96              	.L5:
  97              	.LBE2:
 137:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 		}
 138:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	}
 139:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	#endif
 140:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
 141:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	return pvReturn;
 142:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** }
  98              		.loc 1 142 0
  99 004c 2046     		mov	r0, r4
 100 004e 38BD     		pop	{r3, r4, r5, pc}
 101              	.L13:
 102              		.align	2
 103              	.L12:
 104 0050 00000000 		.word	.LANCHOR0
 105 0054 F0210000 		.word	.LANCHOR1
 106              		.cfi_endproc
 107              	.LFE0:
 109              		.align	1
 110              		.global	vPortFree
 111              		.thumb
 112              		.thumb_func
 114              	vPortFree:
 115              	.LFB1:
 143:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** /*-----------------------------------------------------------*/
 144:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
 145:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** void vPortFree( void *pv )
 146:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** {
 116              		.loc 1 146 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              	.LVL10:
 121 0058 08B5     		push	{r3, lr}
 122              	.LCFI1:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 3, -8
 125              		.cfi_offset 14, -4
 147:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	/* Memory cannot be freed using this scheme.  See heap_2.c, heap_3.c and
 148:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	heap_4.c for alternative implementations, and the memory management pages of
 149:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	http://www.FreeRTOS.org for more information. */
 150:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	( void ) pv;
 151:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
 152:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	/* Force an assert as it is invalid to call this function. */
 153:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	configASSERT( pv == NULL );
 126              		.loc 1 153 0
 127 005a 10B1     		cbz	r0, .L14
 128              		.loc 1 153 0 is_stmt 0 discriminator 1
 129 005c FFF7FEFF 		bl	ulPortSetInterruptMask
 130              	.LVL11:
 131              	.L16:
 132 0060 FEE7     		b	.L16
 133              	.LVL12:
 134              	.L14:
 135 0062 08BD     		pop	{r3, pc}
 136              		.cfi_endproc
 137              	.LFE1:
 139              		.align	1
 140              		.global	vPortInitialiseBlocks
 141              		.thumb
 142              		.thumb_func
 144              	vPortInitialiseBlocks:
 145              	.LFB2:
 154:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** }
 155:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** /*-----------------------------------------------------------*/
 156:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
 157:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** void vPortInitialiseBlocks( void )
 158:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** {
 146              		.loc 1 158 0 is_stmt 1
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 159:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	/* Only required when static memory is not cleared. */
 160:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	xNextFreeByte = ( size_t ) 0;
 151              		.loc 1 160 0
 152 0064 024B     		ldr	r3, .L18
 153 0066 0022     		movs	r2, #0
 154 0068 C3F81426 		str	r2, [r3, #1556]
 155 006c 7047     		bx	lr
 156              	.L19:
 157 006e 00BF     		.align	2
 158              	.L18:
 159 0070 F0210000 		.word	.LANCHOR1
 160              		.cfi_endproc
 161              	.LFE2:
 163              		.align	1
 164              		.global	xPortGetFreeHeapSize
 165              		.thumb
 166              		.thumb_func
 168              	xPortGetFreeHeapSize:
 169              	.LFB3:
 161:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** }
 162:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** /*-----------------------------------------------------------*/
 163:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 
 164:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** size_t xPortGetFreeHeapSize( void )
 165:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** {
 170              		.loc 1 165 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 166:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** 	return ( configADJUSTED_HEAP_SIZE - xNextFreeByte );
 175              		.loc 1 166 0
 176 0074 034B     		ldr	r3, .L21
 177 0076 D3F81406 		ldr	r0, [r3, #1556]
 167:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/MemMang/heap_1.c **** }
 178              		.loc 1 167 0
 179 007a C0F51F50 		rsb	r0, r0, #10176
 180 007e 3830     		adds	r0, r0, #56
 181 0080 7047     		bx	lr
 182              	.L22:
 183 0082 00BF     		.align	2
 184              	.L21:
 185 0084 F0210000 		.word	.LANCHOR1
 186              		.cfi_endproc
 187              	.LFE3:
 189              		.bss
 190              		.align	2
 191              		.set	.LANCHOR0,. + 0
 192              		.set	.LANCHOR1,. + 8688
 195              	pucAlignedHeap.4842:
 196 0000 00000000 		.space	4
 199              	ucHeap:
 200 0004 00000000 		.space	10240
 200      00000000 
 200      00000000 
 200      00000000 
 200      00000000 
 203              	xNextFreeByte:
 204 2804 00000000 		.space	4
 205              		.text
 206              	.Letext0:
 207              		.file 2 "/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/include/task.h"
 208              		.file 3 "/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/GCC/ARM_CM4F/p
 209              		.file 4 "/home/user/gcc-arm-none-eabi-4_8-2013q4/lib/gcc/arm-none-eabi/4.8.3/include/stddef.h"
DEFINED SYMBOLS
                            *ABS*:00000000 heap_1.c
     /tmp/ccxMHk1a.s:20     .text:00000000 $t
     /tmp/ccxMHk1a.s:25     .text:00000000 pvPortMalloc
     /tmp/ccxMHk1a.s:104    .text:00000050 $d
     /tmp/ccxMHk1a.s:109    .text:00000058 $t
     /tmp/ccxMHk1a.s:114    .text:00000058 vPortFree
     /tmp/ccxMHk1a.s:144    .text:00000064 vPortInitialiseBlocks
     /tmp/ccxMHk1a.s:159    .text:00000070 $d
     /tmp/ccxMHk1a.s:163    .text:00000074 $t
     /tmp/ccxMHk1a.s:168    .text:00000074 xPortGetFreeHeapSize
     /tmp/ccxMHk1a.s:185    .text:00000084 $d
     /tmp/ccxMHk1a.s:190    .bss:00000000 $d
     /tmp/ccxMHk1a.s:195    .bss:00000000 pucAlignedHeap.4842
     /tmp/ccxMHk1a.s:199    .bss:00000004 ucHeap
     /tmp/ccxMHk1a.s:203    .bss:00002804 xNextFreeByte
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.e41257821655b1beb88e1ee583b76eae
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.184.aa65fb7281d578229bbad41b91862635
                           .group:00000000 wm4.stddef.h.39.d0197034aa5fd947cae140b9289e6734
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.51.fdf1045aaa750fe709619c2027b96513
                           .group:00000000 wm4.projdefs.h.67.e147d0bb14773a90ce9490c5c93d4b17
                           .group:00000000 wm4.FreeRTOSConfig.h.79.5ce50f1f04ae36d94916fa991aa4b8d7
                           .group:00000000 wm4.portmacro.h.68.6a65242bb09b79c298caf96e860eebfc
                           .group:00000000 wm4.portable.h.323.74480596d2f6d1d8387fc23ab95d1e43
                           .group:00000000 wm4.mpu_wrappers.h.67.4bcfd12ce15e5313ce3efd77400f8168
                           .group:00000000 wm4.FreeRTOS.h.150.cc84f37778a1fad138e88914409bc9ad
                           .group:00000000 wm4.list.h.96.3fa6b36eff50c0aca81a4cee845ec2dc
                           .group:00000000 wm4.task.h.84.f228f660597151d3901b6cf328174595

UNDEFINED SYMBOLS
vTaskSuspendAll
xTaskResumeAll
vApplicationMallocFailedHook
ulPortSetInterruptMask
