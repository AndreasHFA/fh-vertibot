   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"list.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.align	1
  21              		.global	vListInitialise
  22              		.thumb
  23              		.thumb_func
  25              	vListInitialise:
  26              	.LFB0:
  27              		.file 1 "/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c"
   1:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** /*
   2:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     FreeRTOS V7.5.3 - Copyright (C) 2013 Real Time Engineers Ltd. 
   3:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     All rights reserved
   4:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
   5:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
   7:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     ***************************************************************************
   8:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *                                                                       *
   9:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  10:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *    robust, strictly quality controlled, supported, and cross          *
  11:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *    platform software that has become a de facto standard.             *
  12:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *                                                                       *
  13:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *    Help yourself get started quickly and support the FreeRTOS         *
  14:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *    project by purchasing a FreeRTOS tutorial book, reference          *
  15:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *    manual, or both from: http://www.FreeRTOS.org/Documentation        *
  16:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *                                                                       *
  17:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *    Thank you!                                                         *
  18:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *                                                                       *
  19:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     ***************************************************************************
  20:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  21:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     This file is part of the FreeRTOS distribution.
  22:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  23:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  24:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     the terms of the GNU General Public License (version 2) as published by the
  25:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     Free Software Foundation >>!AND MODIFIED BY!<< the FreeRTOS exception.
  26:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  27:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     >>! NOTE: The modification to the GPL is included to allow you to distribute
  28:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     >>! a combined work that includes FreeRTOS without being obliged to provide
  29:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     >>! the source code for proprietary components outside of the FreeRTOS
  30:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     >>! kernel.
  31:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  32:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  33:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  34:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available from the following
  35:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     link: http://www.freertos.org/a00114.html
  36:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  37:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     1 tab == 4 spaces!
  38:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  39:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     ***************************************************************************
  40:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *                                                                       *
  41:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *    Having a problem?  Start by reading the FAQ "My application does   *
  42:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *    not run, what could be wrong?"                                     *
  43:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *                                                                       *
  44:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *    http://www.FreeRTOS.org/FAQHelp.html                               *
  45:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****      *                                                                       *
  46:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     ***************************************************************************
  47:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  48:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org - Documentation, books, training, latest versions,
  49:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     license and Real Time Engineers Ltd. contact details.
  50:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  51:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  52:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  53:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  54:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  55:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd license FreeRTOS to High
  56:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     Integrity Systems to sell under the OpenRTOS brand.  Low cost OpenRTOS
  57:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     licenses offer ticketed support, indemnification and middleware.
  58:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  59:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  60:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     engineered and independently SIL3 certified version for use in safety and
  61:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     mission critical applications that require provable dependability.
  62:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  63:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****     1 tab == 4 spaces!
  64:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** */
  65:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  66:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  67:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** #include <stdlib.h>
  68:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** #include "FreeRTOS.h"
  69:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** #include "list.h"
  70:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  71:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------
  72:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****  * PUBLIC LIST API documented in list.h
  73:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c ****  *----------------------------------------------------------*/
  74:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  75:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** void vListInitialise( xList * const pxList )
  76:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** {
  28              		.loc 1 76 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  77:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	/* The list structure contains a list item which is used to mark the
  78:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	end of the list.  To initialise the list the list end is inserted
  79:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	as the only list entry. */
  80:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxList->pxIndex = ( xListItem * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list struct
  34              		.loc 1 80 0
  35 0000 00F10803 		add	r3, r0, #8
  36 0004 4360     		str	r3, [r0, #4]
  81:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  82:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	/* The list end value is the highest possible value in the list to
  83:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	ensure it remains at the end of the list. */
  84:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxList->xListEnd.xItemValue = portMAX_DELAY;
  37              		.loc 1 84 0
  38 0006 4FF0FF32 		mov	r2, #-1
  85:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  86:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	/* The list end next and previous pointers point to itself so we know
  87:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	when the list is empty. */
  88:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxNext = ( xListItem * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list 
  39              		.loc 1 88 0
  40 000a C360     		str	r3, [r0, #12]
  89:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxPrevious = ( xListItem * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini li
  41              		.loc 1 89 0
  42 000c 0361     		str	r3, [r0, #16]
  90:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  91:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxList->uxNumberOfItems = ( unsigned portBASE_TYPE ) 0U;
  43              		.loc 1 91 0
  44 000e 0023     		movs	r3, #0
  84:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxList->xListEnd.xItemValue = portMAX_DELAY;
  45              		.loc 1 84 0
  46 0010 8260     		str	r2, [r0, #8]
  47              		.loc 1 91 0
  48 0012 0360     		str	r3, [r0]
  49 0014 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE0:
  53              		.align	1
  54              		.global	vListInitialiseItem
  55              		.thumb
  56              		.thumb_func
  58              	vListInitialiseItem:
  59              	.LFB1:
  92:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** }
  93:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
  94:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
  95:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** void vListInitialiseItem( xListItem * const pxItem )
  96:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** {
  60              		.loc 1 96 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  65              	.LVL1:
  97:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	/* Make sure the list item is not recorded as being on a list. */
  98:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxItem->pvContainer = NULL;
  66              		.loc 1 98 0
  67 0016 0023     		movs	r3, #0
  68 0018 0361     		str	r3, [r0, #16]
  69 001a 7047     		bx	lr
  70              		.cfi_endproc
  71              	.LFE1:
  73              		.align	1
  74              		.global	vListInsertEnd
  75              		.thumb
  76              		.thumb_func
  78              	vListInsertEnd:
  79              	.LFB2:
  99:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** }
 100:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 101:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 102:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** void vListInsertEnd( xList * const pxList, xListItem * const pxNewListItem )
 103:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** {
  80              		.loc 1 103 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL2:
 104:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** xListItem * pxIndex;
 105:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 106:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	/* Insert a new list item into pxList, but rather than sort the list,
 107:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	makes the new list item the last item to be removed by a call to
 108:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pvListGetOwnerOfNextEntry. */
 109:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxIndex = pxList->pxIndex;
  86              		.loc 1 109 0
  87 001c 4368     		ldr	r3, [r0, #4]
  88              	.LVL3:
 110:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 111:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIndex;
  89              		.loc 1 111 0
  90 001e 4B60     		str	r3, [r1, #4]
 112:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
  91              		.loc 1 112 0
  92 0020 9A68     		ldr	r2, [r3, #8]
  93 0022 8A60     		str	r2, [r1, #8]
 113:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious->pxNext = pxNewListItem;
  94              		.loc 1 113 0
  95 0024 9A68     		ldr	r2, [r3, #8]
  96 0026 5160     		str	r1, [r2, #4]
 114:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious = pxNewListItem;
  97              		.loc 1 114 0
  98 0028 9960     		str	r1, [r3, #8]
 115:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 116:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in. */
 117:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 118:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 119:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
  99              		.loc 1 119 0
 100 002a 0368     		ldr	r3, [r0]
 101              	.LVL4:
 117:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 102              		.loc 1 117 0
 103 002c 0861     		str	r0, [r1, #16]
 104              		.loc 1 119 0
 105 002e 0133     		adds	r3, r3, #1
 106 0030 0360     		str	r3, [r0]
 107 0032 7047     		bx	lr
 108              		.cfi_endproc
 109              	.LFE2:
 111              		.align	1
 112              		.global	vListInsert
 113              		.thumb
 114              		.thumb_func
 116              	vListInsert:
 117              	.LFB3:
 120:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** }
 121:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 122:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 123:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** void vListInsert( xList * const pxList, xListItem * const pxNewListItem )
 124:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** {
 118              		.loc 1 124 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL5:
 123 0034 30B5     		push	{r4, r5, lr}
 124              	.LCFI0:
 125              		.cfi_def_cfa_offset 12
 126              		.cfi_offset 4, -12
 127              		.cfi_offset 5, -8
 128              		.cfi_offset 14, -4
 125:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** xListItem *pxIterator;
 126:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** portTickType xValueOfInsertion;
 127:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 128:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	/* Insert the new list item into the list, sorted in ulListItem order. */
 129:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	xValueOfInsertion = pxNewListItem->xItemValue;
 129              		.loc 1 129 0
 130 0036 0C68     		ldr	r4, [r1]
 131              	.LVL6:
 130:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 131:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	/* If the list already contains a list item with the same item value then
 132:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	the new list item should be placed after it.  This ensures that TCB's which
 133:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	are stored in ready lists (all of which have the same ulListItem value)
 134:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	get an equal share of the CPU.  However, if the xItemValue is the same as
 135:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	the back marker the iteration loop below will not end.  This means we need
 136:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	to guard against this by checking the value first and modifying the
 137:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	algorithm slightly if necessary. */
 138:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	if( xValueOfInsertion == portMAX_DELAY )
 132              		.loc 1 138 0
 133 0038 631C     		adds	r3, r4, #1
 134 003a 01D1     		bne	.L5
 139:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	{
 140:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 		pxIterator = pxList->xListEnd.pxPrevious;
 135              		.loc 1 140 0
 136 003c 0369     		ldr	r3, [r0, #16]
 137              	.LVL7:
 138 003e 07E0     		b	.L6
 139              	.LVL8:
 140              	.L5:
 141:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	}
 142:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	else
 143:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	{
 144:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 		/* *** NOTE ***********************************************************
 145:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 		If you find your application is crashing here then likely causes are:
 146:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 			1) Stack overflow -
 147:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 			   see http://www.freertos.org/Stacks-and-stack-overflow-checking.html
 148:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 			2) Incorrect interrupt priority assignment, especially on Cortex-M3
 149:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 			   parts where numerically high priority values denote low actual
 150:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 			   interrupt priories, which can seem counter intuitive.  See
 151:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 			   configMAX_SYSCALL_INTERRUPT_PRIORITY on http://www.freertos.org/a00110.html
 152:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 			3) Calling an API function from within a critical section or when
 153:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 			   the scheduler is suspended, or calling an API function that does
 154:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 			   not end in "FromISR" from an interrupt.
 155:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 			4) Using a queue or semaphore before it has been initialised or
 156:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 			   before the scheduler has been started (are interrupts firing
 157:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 			   before vTaskStartScheduler() has been called?).
 158:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 		See http://www.freertos.org/FAQHelp.html for more tips.
 159:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 		**********************************************************************/
 160:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 161:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 		for( pxIterator = ( xListItem * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValue
 141              		.loc 1 161 0
 142 0040 00F10803 		add	r3, r0, #8
 143              	.LVL9:
 144              	.L7:
 145              		.loc 1 161 0 is_stmt 0 discriminator 1
 146 0044 5A68     		ldr	r2, [r3, #4]
 147 0046 1568     		ldr	r5, [r2]
 148 0048 A542     		cmp	r5, r4
 149 004a 01D8     		bhi	.L6
 150              		.loc 1 161 0
 151 004c 1346     		mov	r3, r2
 152              	.LVL10:
 153 004e F9E7     		b	.L7
 154              	.LVL11:
 155              	.L6:
 162:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 		{
 163:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 			/* There is nothing to do here, we are just iterating to the
 164:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 			wanted insertion position. */
 165:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 		}
 166:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	}
 167:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 168:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIterator->pxNext;
 156              		.loc 1 168 0 is_stmt 1
 157 0050 5A68     		ldr	r2, [r3, #4]
 158 0052 4A60     		str	r2, [r1, #4]
 169:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 159              		.loc 1 169 0
 160 0054 9160     		str	r1, [r2, #8]
 170:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIterator;
 161              		.loc 1 170 0
 162 0056 8B60     		str	r3, [r1, #8]
 171:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxIterator->pxNext = pxNewListItem;
 163              		.loc 1 171 0
 164 0058 5960     		str	r1, [r3, #4]
 172:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 173:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in.  This allows fast removal of the
 174:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	item later. */
 175:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 176:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 177:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 165              		.loc 1 177 0
 166 005a 0368     		ldr	r3, [r0]
 167              	.LVL12:
 175:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 168              		.loc 1 175 0
 169 005c 0861     		str	r0, [r1, #16]
 170              		.loc 1 177 0
 171 005e 0133     		adds	r3, r3, #1
 172 0060 0360     		str	r3, [r0]
 173 0062 30BD     		pop	{r4, r5, pc}
 174              		.cfi_endproc
 175              	.LFE3:
 177              		.align	1
 178              		.global	uxListRemove
 179              		.thumb
 180              		.thumb_func
 182              	uxListRemove:
 183              	.LFB4:
 178:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** }
 179:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 180:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 181:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** unsigned portBASE_TYPE uxListRemove( xListItem * const pxItemToRemove )
 182:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** {
 184              		.loc 1 182 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL13:
 183:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** xList * pxList;
 184:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 185:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 190              		.loc 1 185 0
 191 0064 4368     		ldr	r3, [r0, #4]
 192 0066 8268     		ldr	r2, [r0, #8]
 193 0068 9A60     		str	r2, [r3, #8]
 186:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 194              		.loc 1 186 0
 195 006a 8268     		ldr	r2, [r0, #8]
 196 006c 5360     		str	r3, [r2, #4]
 187:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 188:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	/* The list item knows which list it is in.  Obtain the list from the list
 189:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	item. */
 190:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxList = ( xList * ) pxItemToRemove->pvContainer;
 197              		.loc 1 190 0
 198 006e 0369     		ldr	r3, [r0, #16]
 199              	.LVL14:
 191:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 192:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	/* Make sure the index is left pointing to a valid item. */
 193:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	if( pxList->pxIndex == pxItemToRemove )
 200              		.loc 1 193 0
 201 0070 5968     		ldr	r1, [r3, #4]
 202 0072 8142     		cmp	r1, r0
 194:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	{
 195:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 		pxList->pxIndex = pxItemToRemove->pxPrevious;
 203              		.loc 1 195 0
 204 0074 08BF     		it	eq
 205 0076 5A60     		streq	r2, [r3, #4]
 196:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	}
 197:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 198:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	pxItemToRemove->pvContainer = NULL;
 206              		.loc 1 198 0
 207 0078 0022     		movs	r2, #0
 208 007a 0261     		str	r2, [r0, #16]
 199:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )--;
 209              		.loc 1 199 0
 210 007c 1868     		ldr	r0, [r3]
 211              	.LVL15:
 212 007e 0138     		subs	r0, r0, #1
 213 0080 1860     		str	r0, [r3]
 200:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 
 201:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** 	return pxList->uxNumberOfItems;
 202:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/list.c **** }
 214              		.loc 1 202 0
 215 0082 7047     		bx	lr
 216              		.cfi_endproc
 217              	.LFE4:
 219              	.Letext0:
 220              		.file 2 "/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/include/list.h"
 221              		.file 3 "/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/FreeRTOS/Source/portable/GCC/ARM_CM4F/p
DEFINED SYMBOLS
                            *ABS*:00000000 list.c
     /tmp/ccfo86r7.s:20     .text:00000000 $t
     /tmp/ccfo86r7.s:25     .text:00000000 vListInitialise
     /tmp/ccfo86r7.s:58     .text:00000016 vListInitialiseItem
     /tmp/ccfo86r7.s:78     .text:0000001c vListInsertEnd
     /tmp/ccfo86r7.s:116    .text:00000034 vListInsert
     /tmp/ccfo86r7.s:182    .text:00000064 uxListRemove
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.e41257821655b1beb88e1ee583b76eae
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.184.aa65fb7281d578229bbad41b91862635
                           .group:00000000 wm4.stddef.h.39.d0197034aa5fd947cae140b9289e6734
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.51.fdf1045aaa750fe709619c2027b96513
                           .group:00000000 wm4.projdefs.h.67.e147d0bb14773a90ce9490c5c93d4b17
                           .group:00000000 wm4.FreeRTOSConfig.h.79.5ce50f1f04ae36d94916fa991aa4b8d7
                           .group:00000000 wm4.portmacro.h.68.6a65242bb09b79c298caf96e860eebfc
                           .group:00000000 wm4.portable.h.323.74480596d2f6d1d8387fc23ab95d1e43
                           .group:00000000 wm4.mpu_wrappers.h.67.4bcfd12ce15e5313ce3efd77400f8168
                           .group:00000000 wm4.FreeRTOS.h.150.cc84f37778a1fad138e88914409bc9ad
                           .group:00000000 wm4.list.h.96.3fa6b36eff50c0aca81a4cee845ec2dc

NO UNDEFINED SYMBOLS
