   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"Vector_math.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.align	1
  21              		.global	VectorDotProduct
  22              		.thumb
  23              		.thumb_func
  25              	VectorDotProduct:
  26              	.LFB0:
  27              		.file 1 "/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c"
   1:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** #include <Vector_math.h>
   2:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 
   3:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 
   4:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** //Computes the dot product of two vectors 
   5:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** float VectorDotProduct(float vector1[3],float vector2[3]) 
   6:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** {   
  28              		.loc 1 6 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
   7:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	int c = 0;
   8:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	float op=0;      
  38              		.loc 1 8 0
  39 0002 9FED070A 		flds	s0, .L4
   6:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** {   
  40              		.loc 1 6 0
  41 0006 0023     		movs	r3, #0
  42              	.LVL1:
  43              	.L2:
   5:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** float VectorDotProduct(float vector1[3],float vector2[3]) 
  44              		.loc 1 5 0 discriminator 2
  45 0008 C418     		adds	r4, r0, r3
  46 000a CA18     		adds	r2, r1, r3
   9:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	for( c = 0 ; c < 3 ; c++ )   
  10:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	{   
  11:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 		op += vector1[c] * vector2[c];   
  47              		.loc 1 11 0 discriminator 2
  48 000c 94ED007A 		flds	s14, [r4, #0]
  49 0010 D2ED007A 		flds	s15, [r2, #0]
  50 0014 0433     		adds	r3, r3, #4
   9:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	for( c = 0 ; c < 3 ; c++ )   
  51              		.loc 1 9 0 discriminator 2
  52 0016 0C2B     		cmp	r3, #12
  53              		.loc 1 11 0 discriminator 2
  54 0018 07EE270A 		fmacs	s0, s14, s15
  55              	.LVL2:
   9:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	for( c = 0 ; c < 3 ; c++ )   
  56              		.loc 1 9 0 discriminator 2
  57 001c F4D1     		bne	.L2
  12:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	}      
  13:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	return op;  
  14:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** }  
  58              		.loc 1 14 0
  59 001e 10BD     		pop	{r4, pc}
  60              	.L5:
  61              		.align	2
  62              	.L4:
  63 0020 00000000 		.word	0
  64              		.cfi_endproc
  65              	.LFE0:
  67              		.align	1
  68              		.global	VectorCrossProduct
  69              		.thumb
  70              		.thumb_func
  72              	VectorCrossProduct:
  73              	.LFB1:
  15:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 
  16:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** //Computes the cross product of two vectors 
  17:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** void VectorCrossProduct(float vectorOut[3], float v1[3],float v2[3]) 
  18:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** {   
  74              		.loc 1 18 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.LVL3:
  19:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	vectorOut[0] = (v1[1]*v2[2]) - (v1[2]*v2[1]);   
  80              		.loc 1 19 0
  81 0024 91ED026A 		flds	s12, [r1, #8]
  82 0028 D2ED017A 		flds	s15, [r2, #4]
  83 002c D1ED016A 		flds	s13, [r1, #4]
  84 0030 92ED027A 		flds	s14, [r2, #8]
  85 0034 66EE277A 		fmuls	s15, s12, s15
  86 0038 56EE877A 		fmscs	s15, s13, s14
  87 003c C0ED007A 		fsts	s15, [r0, #0]
  20:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	vectorOut[1] = (v1[2]*v2[0]) - (v1[0]*v2[2]);   
  88              		.loc 1 20 0
  89 0040 91ED006A 		flds	s12, [r1, #0]
  90 0044 D2ED027A 		flds	s15, [r2, #8]
  91 0048 D1ED026A 		flds	s13, [r1, #8]
  92 004c 92ED007A 		flds	s14, [r2, #0]
  93 0050 66EE277A 		fmuls	s15, s12, s15
  94 0054 56EE877A 		fmscs	s15, s13, s14
  95 0058 C0ED017A 		fsts	s15, [r0, #4]
  21:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	vectorOut[2] = (v1[0]*v2[1]) - (v1[1]*v2[0]); 
  96              		.loc 1 21 0
  97 005c 91ED016A 		flds	s12, [r1, #4]
  98 0060 D2ED007A 		flds	s15, [r2, #0]
  99 0064 D1ED006A 		flds	s13, [r1, #0]
 100 0068 92ED017A 		flds	s14, [r2, #4]
 101 006c 66EE277A 		fmuls	s15, s12, s15
 102 0070 56EE877A 		fmscs	s15, s13, s14
 103 0074 C0ED027A 		fsts	s15, [r0, #8]
 104 0078 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE1:
 108              		.align	1
 109              		.global	VectorScale
 110              		.thumb
 111              		.thumb_func
 113              	VectorScale:
 114              	.LFB2:
  22:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** }  
  23:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 
  24:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** //Multiply the vector by a scalar.  
  25:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** void VectorScale(float vectorOut[3],float vectorIn[3], float scale2) 
  26:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** {   
 115              		.loc 1 26 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120              	.LVL4:
  27:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	int c = 0;
  28:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	for( c = 0 ; c < 3 ; c++ )   
  29:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	{    
  30:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 		vectorOut[c] = vectorIn[c] * scale2;    
 121              		.loc 1 30 0
 122 007a D1ED007A 		flds	s15, [r1, #0]
 123 007e 67EE807A 		fmuls	s15, s15, s0
 124 0082 C0ED007A 		fsts	s15, [r0, #0]
 125              	.LVL5:
 126 0086 D1ED017A 		flds	s15, [r1, #4]
 127 008a 67EE807A 		fmuls	s15, s15, s0
 128 008e C0ED017A 		fsts	s15, [r0, #4]
 129              	.LVL6:
 130 0092 D1ED027A 		flds	s15, [r1, #8]
 131 0096 27EE800A 		fmuls	s0, s15, s0
 132              	.LVL7:
 133 009a 80ED020A 		fsts	s0, [r0, #8]
 134              	.LVL8:
 135 009e 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE2:
 139              		.align	1
 140              		.global	VectorAdd
 141              		.thumb
 142              		.thumb_func
 144              	VectorAdd:
 145              	.LFB3:
  31:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	} 
  32:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** }  
  33:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 
  34:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** void VectorAdd(float vectorOut[3],float vectorIn1[3], float vectorIn2[3]) 
  35:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** {
 146              		.loc 1 35 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              	.LVL9:
 151 00a0 70B5     		push	{r4, r5, r6, lr}
 152              	.LCFI1:
 153              		.cfi_def_cfa_offset 16
 154              		.cfi_offset 4, -16
 155              		.cfi_offset 5, -12
 156              		.cfi_offset 6, -8
 157              		.cfi_offset 14, -4
 158              		.loc 1 35 0
 159 00a2 0023     		movs	r3, #0
 160              	.LVL10:
 161              	.L9:
  34:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** void VectorAdd(float vectorOut[3],float vectorIn1[3], float vectorIn2[3]) 
 162              		.loc 1 34 0 discriminator 2
 163 00a4 CE18     		adds	r6, r1, r3
 164 00a6 D518     		adds	r5, r2, r3
  36:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	int c = 0;
  37:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c ****    
  38:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	for(c = 0 ; c < 3 ; c++ )   
  39:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	{      
  40:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 		vectorOut[c] = vectorIn1[c] + vectorIn2[c];   
 165              		.loc 1 40 0 discriminator 2
 166 00a8 96ED007A 		flds	s14, [r6, #0]
 167 00ac D5ED007A 		flds	s15, [r5, #0]
  34:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** void VectorAdd(float vectorOut[3],float vectorIn1[3], float vectorIn2[3]) 
 168              		.loc 1 34 0 discriminator 2
 169 00b0 C418     		adds	r4, r0, r3
 170              		.loc 1 40 0 discriminator 2
 171 00b2 77EE277A 		fadds	s15, s14, s15
 172 00b6 0433     		adds	r3, r3, #4
  38:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	for(c = 0 ; c < 3 ; c++ )   
 173              		.loc 1 38 0 discriminator 2
 174 00b8 0C2B     		cmp	r3, #12
 175              		.loc 1 40 0 discriminator 2
 176 00ba C4ED007A 		fsts	s15, [r4, #0]
  38:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	for(c = 0 ; c < 3 ; c++ )   
 177              		.loc 1 38 0 discriminator 2
 178 00be F1D1     		bne	.L9
  41:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	} 
  42:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** } 
 179              		.loc 1 42 0
 180 00c0 70BD     		pop	{r4, r5, r6, pc}
 181              		.cfi_endproc
 182              	.LFE3:
 184              		.align	1
 185              		.global	MatrixMultiply
 186              		.thumb
 187              		.thumb_func
 189              	MatrixMultiply:
 190              	.LFB4:
  43:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 
  44:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 
  45:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 
  46:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** //Multiply two 3x3 matrices. 
  47:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** void MatrixMultiply(float a[3][3], float b[3][3],float mat[3][3]) 
  48:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** {   
 191              		.loc 1 48 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 16
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              	.LVL11:
 196 00c2 F0B5     		push	{r4, r5, r6, r7, lr}
 197              	.LCFI2:
 198              		.cfi_def_cfa_offset 20
 199              		.cfi_offset 4, -20
 200              		.cfi_offset 5, -16
 201              		.cfi_offset 6, -12
 202              		.cfi_offset 7, -8
 203              		.cfi_offset 14, -4
  47:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** void MatrixMultiply(float a[3][3], float b[3][3],float mat[3][3]) 
 204              		.loc 1 47 0
 205 00c4 0830     		adds	r0, r0, #8
 206              	.LVL12:
 207              		.loc 1 48 0
 208 00c6 85B0     		sub	sp, sp, #20
 209              	.LCFI3:
 210              		.cfi_def_cfa_offset 40
  47:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** void MatrixMultiply(float a[3][3], float b[3][3],float mat[3][3]) 
 211              		.loc 1 47 0
 212 00c8 0025     		movs	r5, #0
 213 00ca 22E0     		b	.L12
 214              	.LVL13:
 215              	.L13:
  49:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	float op[3];    
  50:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	int x = 0;
  51:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	int y = 0;
  52:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	int w = 0;
  53:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	//float test = 0;
  54:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	
  55:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	for(  x = 0 ; x < 3 ; x++ )   
  56:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	{     
  57:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 		for(  y = 0 ; y < 3 ; y++ )     
  58:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 		{       
  59:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 			for(  w = 0 ; w < 3 ; w++ )       
  60:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 			{        
  61:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 				op[w] = a[x][w]*b[w][y];       
 216              		.loc 1 61 0 discriminator 1
 217 00cc D3ED007A 		flds	s15, [r3, #0]
 218 00d0 10ED027A 		flds	s14, [r0, #-8]
 219 00d4 50ED016A 		flds	s13, [r0, #-4]
 220 00d8 27EE277A 		fmuls	s14, s14, s15
 221 00dc D3ED037A 		flds	s15, [r3, #12]
 222 00e0 66EEA77A 		fmuls	s15, s13, s15
 223 00e4 8DED017A 		fsts	s14, [sp, #4]
 224              	.LVL14:
 225 00e8 D0ED006A 		flds	s13, [r0, #0]
 226 00ec CDED027A 		fsts	s15, [sp, #8]
 227              	.LVL15:
  62:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 			}        
  63:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 			mat[x][y] = 0;       
  64:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 			mat[x][y] = op[0] + op[1] + op[2];              
 228              		.loc 1 64 0 discriminator 1
 229 00f0 77EE277A 		fadds	s15, s14, s15
  61:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 				op[w] = a[x][w]*b[w][y];       
 230              		.loc 1 61 0 discriminator 1
 231 00f4 93ED067A 		flds	s14, [r3, #24]
 232              		.loc 1 64 0 discriminator 1
 233 00f8 46EE877A 		fmacs	s15, s13, s14
  47:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** void MatrixMultiply(float a[3][3], float b[3][3],float mat[3][3]) 
 234              		.loc 1 47 0 discriminator 1
 235 00fc 3719     		adds	r7, r6, r4
 236 00fe 0434     		adds	r4, r4, #4
 237 0100 0433     		adds	r3, r3, #4
  57:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 		for(  y = 0 ; y < 3 ; y++ )     
 238              		.loc 1 57 0 discriminator 1
 239 0102 0C2C     		cmp	r4, #12
 240              		.loc 1 64 0 discriminator 1
 241 0104 C7ED007A 		fsts	s15, [r7, #0]
  57:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 		for(  y = 0 ; y < 3 ; y++ )     
 242              		.loc 1 57 0 discriminator 1
 243 0108 E0D1     		bne	.L13
 244 010a 0C35     		adds	r5, r5, #12
 245 010c 0C30     		adds	r0, r0, #12
  55:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	for(  x = 0 ; x < 3 ; x++ )   
 246              		.loc 1 55 0
 247 010e 242D     		cmp	r5, #36
 248 0110 03D0     		beq	.L11
 249              	.LVL16:
 250              	.L12:
  47:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** void MatrixMultiply(float a[3][3], float b[3][3],float mat[3][3]) 
 251              		.loc 1 47 0 discriminator 1
 252 0112 5619     		adds	r6, r2, r5
 253 0114 0B46     		mov	r3, r1
 254 0116 0024     		movs	r4, #0
 255 0118 D8E7     		b	.L13
 256              	.LVL17:
 257              	.L11:
  65:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 			//test=mat[x][y];     
  66:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 		}   
  67:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** 	} 
  68:/home/user/Desktop/STM32-Projekte/FH-Vertibot/src/project_src/Vector_math.c **** } 
 258              		.loc 1 68 0
 259 011a 05B0     		add	sp, sp, #20
 260 011c F0BD     		pop	{r4, r5, r6, r7, pc}
 261              		.cfi_endproc
 262              	.LFE4:
 264              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 Vector_math.c
     /tmp/ccUYYdDd.s:20     .text:00000000 $t
     /tmp/ccUYYdDd.s:25     .text:00000000 VectorDotProduct
     /tmp/ccUYYdDd.s:63     .text:00000020 $d
     /tmp/ccUYYdDd.s:67     .text:00000024 $t
     /tmp/ccUYYdDd.s:72     .text:00000024 VectorCrossProduct
     /tmp/ccUYYdDd.s:113    .text:0000007a VectorScale
     /tmp/ccUYYdDd.s:144    .text:000000a0 VectorAdd
     /tmp/ccUYYdDd.s:189    .text:000000c2 MatrixMultiply
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.d481a9f4eba3ec0ceb0050fd0b2feec2

NO UNDEFINED SYMBOLS
